# http://www.python36.com/predict-cryptocurrency-price-using-lstm/

# execfile('./initCryptosJer.py')
# exec(open('./initCryptosJer.py').read())
# exec(open('tensorflow-master/predict crypto/scriptsJer/initCryptosJer.py').read())

# LSTM for closing bitcoin price with regression framing
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from pandas import read_json
from keras.models import Sequential, load_model
from keras.layers import Dense
from keras.layers import LSTM
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import train_test_split
import math
import os

os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'



# convert an array of values into a dataset matrix
def create_dataset(dataset):
  dataX, dataY = [], []
  for i in range(len(dataset)-1):
    dataX.append(dataset[i])
    dataY.append(dataset[i + 1])
  return np.asarray(dataX), np.asarray(dataY)

# heures
# view-source:https://api.bitfinex.com/v2/candles/trade:1h:tBTCUSD/hist
#j_son = '[[1529064000000,6529.5,6517.7,6529.5,6511,61.86246443],[1529060400000,6585.6,6530.07791658,6659,6450,2182.26847355],[1529056800000,6588.2,6585.6,6597,6555.2,792.44072145],[1529053200000,6589.5,6588.2,6597.4,6554.7,735.42007243],[1529049600000,6572.6,6589.5,6614.48347786,6550.2,690.83525503],[1529046000000,6580.7,6572.6,6598.1,6566.5,446.21856233],[1529042400000,6574.2,6580.6,6615,6559.5,515.91477636],[1529038800000,6559.9,6574.2,6584.1,6550.2,426.49981021],[1529035200000,6598,6559.9,6598.1,6550.3,807.70430334],[1529031600000,6589.9,6598,6618.5,6584.7,384.91763318],[1529028000000,6588.2,6589.8,6590.6,6555,565.20362266],[1529024400000,6613.6,6588.3,6614.3,6560,710.6721469],[1529020800000,6633.8,6614.3,6642.1,6582.4,456.26056032],[1529017200000,6614.8,6633.7,6709.14278109,6580,2110.50795586],[1529013600000,6639.7,6614.8,6650.7,6584.8,448.93015754],[1529010000000,6650.3,6639.7,6687.9,6631.7,417.45063871],[1529006400000,6637,6650.3,6681.9,6623,754.50142545],[1529002800000,6650,6637,6654.4,6602.2,701.29324579],[1528999200000,6611.2,6650,6736.52103872,6609.6,2432.84862598],[1528995600000,6521.1,6611.2,6649,6496.7,3743.37840946],[1528992000000,6349.9,6521.1,6555.2,6349.9,2681.28478591],[1528988400000,6419,6350,6419,6322,1504.25800521],[1528984800000,6371.8,6419,6436,6371.8,1037.31267267],[1528981200000,6486,6371.7,6486.1,6361.2,2533.38459461],[1528977600000,6523.3,6486,6523.3,6468.8,627.35628621],[1528974000000,6484.7,6523.3,6538,6484.5,1217.86509615],[1528970400000,6494.5,6484.7,6500,6470,326.88806789],[1528966800000,6484.2,6495.3,6503.2,6475.4,352.53178459],[1528963200000,6477.7,6484.1,6599.8,6450.2,3683.63855631],[1528959600000,6479.3,6477.2,6480,6442.1,696.94102898],[1528956000000,6470.1,6476.2,6489.9,6462.1,421.14527544],[1528952400000,6469.3,6470.1,6490,6435.7,874.64626562],[1528948800000,6487.9,6469.2,6506.2,6469.2,502.83331513],[1528945200000,6471.2,6487.9,6498,6458.4,715.36889209],[1528941600000,6313.2,6469.5,6548,6313.2,3541.67158654],[1528938000000,6273.2,6313.2,6338.1,6269.6,995.48771196],[1528934400000,6295,6273.2,6332.9,6269.5,743.25797974],[1528930800000,6325.1,6295.1,6344.3,6275.4,669.91689248],[1528927200000,6275.9,6322.6,6349.5,6270,1395.3914626],[1528923600000,6259.6,6278,6287.4,6214.26482243,1060.22473998],[1528920000000,6284.2,6259.5,6290.9,6225,1302.83733024],[1528916400000,6321.8,6284.5,6347.1,6250,2022.36695292],[1528912800000,6318,6321.9,6368.8,6308,1705.6584703],[1528909200000,6277,6313,6328,6226.7,2248.55812265],[1528905600000,6375,6277,6408.2,6107.87718467,15872.56611285],[1528902000000,6429.9,6375.1,6460,6337,2073.72912628],[1528898400000,6454.5,6429.9,6454.6,6405.1,987.11343953],[1528894800000,6456.4,6454.6,6484.8,6439.03197718,568.10114705],[1528891200000,6447.3,6456.3,6491.2,6416.1,2516.34715428],[1528887600000,6432.5,6447.36873047,6464.4174852,6415,1289.09355609],[1528884000000,6400.4,6431.7,6478.4,6400.4,1490.93153345],[1528880400000,6522.7,6400.4,6536.2,6370,4227.35016506],[1528876800000,6544.1,6522.7,6562.6,6500,1267.64163532],[1528873200000,6569.9,6544,6578.6,6533.7,625.48373156],[1528869600000,6570.1,6570,6578.5,6563.1,513.27094693],[1528866000000,6585,6570.2,6611.7,6552.7,1206.91595891],[1528862400000,6550.1,6584.9,6588.5,6517.4515652,846.06869642],[1528858800000,6554.3,6550.1,6554.5,6530.1,461.00409316],[1528855200000,6543.5,6554.4,6570,6543.5,239.04645567],[1528851600000,6544,6542.7,6557.7,6536.91114358,268.65697429],[1528848000000,6543.9,6543.9,6570.2,6535,719.30716368],[1528844400000,6528.5,6543.9,6572.3,6480,2503.39231933],[1528840800000,6531.7,6528.5,6559.7,6520.1,567.69931241],[1528837200000,6525,6531.8,6550,6484.24990102,1689.09484357],[1528833600000,6498.6,6522.33675361,6577,6484.1,2336.04983864],[1528830000000,6684.1,6498.5,6684.2,6436.1,8669.31986288],[1528826400000,6720.4,6684.2,6724.8,6661.2,1708.4099897],[1528822800000,6729.1,6720.4,6746.3,6710,626.7150602],[1528819200000,6752.81847795,6729.1,6760,6667,1717.72605827],[1528815600000,6752.1,6752.8,6754.9,6735.3,231.14287513],[1528812000000,6732.8,6752,6778.7,6711.1,709.35664745],[1528808400000,6722.4,6732.8,6743.8,6698.2,1914.33371294],[1528804800000,6827.1,6722.4,6834.3,6683.17561393,1470.72601992],[1528801200000,6836.4,6827.2,6845.1,6801.6,661.7806736],[1528797600000,6842.1,6836.4,6844,6823.5,335.63243113],[1528794000000,6845.72384404,6842.1,6850,6840.3,404.00925049],[1528790400000,6826,6846.5,6868.6,6796.5,1299.72705633],[1528786800000,6832.1,6825.8,6852.3,6812,762.18897425],[1528783200000,6831.7,6832,6835,6827.1,274.01183261],[1528779600000,6815.8,6831.7,6840.1,6814,250.72501436],[1528776000000,6811.5,6815.7,6846,6804.7,483.28602098],[1528772400000,6856.2,6811.4,6859.1,6784.1,1118.47284824],[1528768800000,6847.00019453,6856.3,6865.4,6833.1,727.48371474],[1528765200000,6842.9,6847,6849.7,6825,782.20386884],[1528761600000,6873.4,6842.8,6873.4,6826.7,764.82457688],[1528758000000,6783.2,6873.3,6899,6775,1965.62743549],[1528754400000,6767.1,6783.2,6790.9,6745,387.67876765],[1528750800000,6753.4,6767.1,6770.2,6748.8,279.14978707],[1528747200000,6756,6753.4,6761,6723.2,612.58942491],[1528743600000,6744.7,6756,6800.3,6732.1,1595.81937658],[1528740000000,6713.6,6744.7,6774.7,6675,1438.7834865],[1528736400000,6728.1,6713.5,6741.46838356,6713,305.82336835],[1528732800000,6692.7,6728,6746.9,6692.2,1087.73351083],[1528729200000,6707.3,6692.7,6720.9,6636.7,1664.57164657],[1528725600000,6743.84491283,6707.3,6751,6671.2,1361.32705163],[1528722000000,6761.5,6743.9,6766.3,6741.3,518.89143627],[1528718400000,6778.3,6764.1,6786.6,6724,913.05068841],[1528714800000,6759,6778.2,6780,6740.4,504.35893861],[1528711200000,6762.1,6758.9,6768.5,6723,598.40296267],[1528707600000,6782.3,6762,6803,6754.8,512.20309043],[1528704000000,6632.6,6783,6821.1,6629.7,1992.11147005],[1528700400000,6734.8,6632.6,6750.4,6631,1145.4294513],[1528696800000,6734,6734.8,6757.2,6713.7,339.81142513],[1528693200000,6772.1,6734.1,6778.27308962,6719.3,595.11289378],[1528689600000,6763.3,6772.1,6789.4,6737.8,495.97836909],[1528686000000,6772,6763.2,6784.6,6736.8,629.01186764],[1528682400000,6752.4,6772.1,6807.3,6741.7,1173.15977461],[1528678800000,6714.5,6752.2,6752.7,6689.4,1403.92340544],[1528675200000,6757.9,6714.4,6758,6705.3,857.19166417],[1528671600000,6669.8,6758,6768.4,6665.9,1668.23608412],[1528668000000,6723.48544081,6669.8,6742.1,6655,2298.94854782],[1528664400000,6702.7,6723.5,6763.7,6675,2434.89302184],[1528660800000,6825.5,6702.7,6826.6,6618.9,5341.79039043],[1528657200000,6739.5,6825.5,6844.9,6703,4184.84510866],[1528653600000,6734.8,6739.5,6786.1,6630,6336.56089484],[1528650000000,7191.82113079,6738.1,7202.3,6700,14050.68250078],[1528646400000,7226.89629522,7191.8,7236.7,7187.4,659.24157771],[1528642800000,7228.4,7226.89629522,7248,7209.8,323.6828298],[1528639200000,7267.9,7228.4,7268,7227.7,233.19154743],[1528635600000,7228.8,7267.8,7278.9,7175,988.67529939]]'
#j_son = '[[1529067600000,6502.8,6508.2,6523.8,6476.3,442.92832849],[1529064000000,6529.5,6502.72088387,6530,6478.1,1114.51734746],[1529060400000,6585.6,6530.07791658,6659,6450,2182.26847355],[1529056800000,6588.2,6585.6,6597,6555.2,792.44072145],[1529053200000,6589.5,6588.2,6597.4,6554.7,735.42007243],[1529049600000,6572.6,6589.5,6614.48347786,6550.2,690.83525503],[1529046000000,6580.7,6572.6,6598.1,6566.5,446.21856233],[1529042400000,6574.2,6580.6,6615,6559.5,515.91477636],[1529038800000,6559.9,6574.2,6584.1,6550.2,426.49981021],[1529035200000,6598,6559.9,6598.1,6550.3,807.70430334],[1529031600000,6589.9,6598,6618.5,6584.7,384.91763318],[1529028000000,6588.2,6589.8,6590.6,6555,565.20362266],[1529024400000,6613.6,6588.3,6614.3,6560,710.6721469],[1529020800000,6633.8,6614.3,6642.1,6582.4,456.26056032],[1529017200000,6614.8,6633.7,6709.14278109,6580,2110.50795586],[1529013600000,6639.7,6614.8,6650.7,6584.8,448.93015754],[1529010000000,6650.3,6639.7,6687.9,6631.7,417.45063871],[1529006400000,6637,6650.3,6681.9,6623,754.50142545],[1529002800000,6650,6637,6654.4,6602.2,701.29324579],[1528999200000,6611.2,6650,6736.52103872,6609.6,2432.84862598],[1528995600000,6521.1,6611.2,6649,6496.7,3743.37840946],[1528992000000,6349.9,6521.1,6555.2,6349.9,2681.28478591],[1528988400000,6419,6350,6419,6322,1504.25800521],[1528984800000,6371.8,6419,6436,6371.8,1037.31267267],[1528981200000,6486,6371.7,6486.1,6361.2,2533.38459461],[1528977600000,6523.3,6486,6523.3,6468.8,627.35628621],[1528974000000,6484.7,6523.3,6538,6484.5,1217.86509615],[1528970400000,6494.5,6484.7,6500,6470,326.88806789],[1528966800000,6484.2,6495.3,6503.2,6475.4,352.53178459],[1528963200000,6477.7,6484.1,6599.8,6450.2,3683.63855631],[1528959600000,6479.3,6477.2,6480,6442.1,696.94102898],[1528956000000,6470.1,6476.2,6489.9,6462.1,421.14527544],[1528952400000,6469.3,6470.1,6490,6435.7,874.64626562],[1528948800000,6487.9,6469.2,6506.2,6469.2,502.83331513],[1528945200000,6471.2,6487.9,6498,6458.4,715.36889209],[1528941600000,6313.2,6469.5,6548,6313.2,3541.67158654],[1528938000000,6273.2,6313.2,6338.1,6269.6,995.48771196],[1528934400000,6295,6273.2,6332.9,6269.5,743.25797974],[1528930800000,6325.1,6295.1,6344.3,6275.4,669.91689248],[1528927200000,6275.9,6322.6,6349.5,6270,1395.3914626],[1528923600000,6259.6,6278,6287.4,6214.26482243,1060.22473998],[1528920000000,6284.2,6259.5,6290.9,6225,1302.83733024],[1528916400000,6321.8,6284.5,6347.1,6250,2022.36695292],[1528912800000,6318,6321.9,6368.8,6308,1705.6584703],[1528909200000,6277,6313,6328,6226.7,2248.55812265],[1528905600000,6375,6277,6408.2,6107.87718467,15872.56611285],[1528902000000,6429.9,6375.1,6460,6337,2073.72912628],[1528898400000,6454.5,6429.9,6454.6,6405.1,987.11343953],[1528894800000,6456.4,6454.6,6484.8,6439.03197718,568.10114705],[1528891200000,6447.3,6456.3,6491.2,6416.1,2516.34715428],[1528887600000,6432.5,6447.36873047,6464.4174852,6415,1289.09355609],[1528884000000,6400.4,6431.7,6478.4,6400.4,1490.93153345],[1528880400000,6522.7,6400.4,6536.2,6370,4227.35016506],[1528876800000,6544.1,6522.7,6562.6,6500,1267.64163532],[1528873200000,6569.9,6544,6578.6,6533.7,625.48373156],[1528869600000,6570.1,6570,6578.5,6563.1,513.27094693],[1528866000000,6585,6570.2,6611.7,6552.7,1206.91595891],[1528862400000,6550.1,6584.9,6588.5,6517.4515652,846.06869642],[1528858800000,6554.3,6550.1,6554.5,6530.1,461.00409316],[1528855200000,6543.5,6554.4,6570,6543.5,239.04645567],[1528851600000,6544,6542.7,6557.7,6536.91114358,268.65697429],[1528848000000,6543.9,6543.9,6570.2,6535,719.30716368],[1528844400000,6528.5,6543.9,6572.3,6480,2503.39231933],[1528840800000,6531.7,6528.5,6559.7,6520.1,567.69931241],[1528837200000,6525,6531.8,6550,6484.24990102,1689.09484357],[1528833600000,6498.6,6522.33675361,6577,6484.1,2336.04983864],[1528830000000,6684.1,6498.5,6684.2,6436.1,8669.31986288],[1528826400000,6720.4,6684.2,6724.8,6661.2,1708.4099897],[1528822800000,6729.1,6720.4,6746.3,6710,626.7150602],[1528819200000,6752.81847795,6729.1,6760,6667,1717.72605827],[1528815600000,6752.1,6752.8,6754.9,6735.3,231.14287513],[1528812000000,6732.8,6752,6778.7,6711.1,709.35664745],[1528808400000,6722.4,6732.8,6743.8,6698.2,1914.33371294],[1528804800000,6827.1,6722.4,6834.3,6683.17561393,1470.72601992],[1528801200000,6836.4,6827.2,6845.1,6801.6,661.7806736],[1528797600000,6842.1,6836.4,6844,6823.5,335.63243113],[1528794000000,6845.72384404,6842.1,6850,6840.3,404.00925049],[1528790400000,6826,6846.5,6868.6,6796.5,1299.72705633],[1528786800000,6832.1,6825.8,6852.3,6812,762.18897425],[1528783200000,6831.7,6832,6835,6827.1,274.01183261],[1528779600000,6815.8,6831.7,6840.1,6814,250.72501436],[1528776000000,6811.5,6815.7,6846,6804.7,483.28602098],[1528772400000,6856.2,6811.4,6859.1,6784.1,1118.47284824],[1528768800000,6847.00019453,6856.3,6865.4,6833.1,727.48371474],[1528765200000,6842.9,6847,6849.7,6825,782.20386884],[1528761600000,6873.4,6842.8,6873.4,6826.7,764.82457688],[1528758000000,6783.2,6873.3,6899,6775,1965.62743549],[1528754400000,6767.1,6783.2,6790.9,6745,387.67876765],[1528750800000,6753.4,6767.1,6770.2,6748.8,279.14978707],[1528747200000,6756,6753.4,6761,6723.2,612.58942491],[1528743600000,6744.7,6756,6800.3,6732.1,1595.81937658],[1528740000000,6713.6,6744.7,6774.7,6675,1438.7834865],[1528736400000,6728.1,6713.5,6741.46838356,6713,305.82336835],[1528732800000,6692.7,6728,6746.9,6692.2,1087.73351083],[1528729200000,6707.3,6692.7,6720.9,6636.7,1664.57164657],[1528725600000,6743.84491283,6707.3,6751,6671.2,1361.32705163],[1528722000000,6761.5,6743.9,6766.3,6741.3,518.89143627],[1528718400000,6778.3,6764.1,6786.6,6724,913.05068841],[1528714800000,6759,6778.2,6780,6740.4,504.35893861],[1528711200000,6762.1,6758.9,6768.5,6723,598.40296267],[1528707600000,6782.3,6762,6803,6754.8,512.20309043],[1528704000000,6632.6,6783,6821.1,6629.7,1992.11147005],[1528700400000,6734.8,6632.6,6750.4,6631,1145.4294513],[1528696800000,6734,6734.8,6757.2,6713.7,339.81142513],[1528693200000,6772.1,6734.1,6778.27308962,6719.3,595.11289378],[1528689600000,6763.3,6772.1,6789.4,6737.8,495.97836909],[1528686000000,6772,6763.2,6784.6,6736.8,629.01186764],[1528682400000,6752.4,6772.1,6807.3,6741.7,1173.15977461],[1528678800000,6714.5,6752.2,6752.7,6689.4,1403.92340544],[1528675200000,6757.9,6714.4,6758,6705.3,857.19166417],[1528671600000,6669.8,6758,6768.4,6665.9,1668.23608412],[1528668000000,6723.48544081,6669.8,6742.1,6655,2298.94854782],[1528664400000,6702.7,6723.5,6763.7,6675,2434.89302184],[1528660800000,6825.5,6702.7,6826.6,6618.9,5341.79039043],[1528657200000,6739.5,6825.5,6844.9,6703,4184.84510866],[1528653600000,6734.8,6739.5,6786.1,6630,6336.56089484],[1528650000000,7191.82113079,6738.1,7202.3,6700,14050.68250078],[1528646400000,7226.89629522,7191.8,7236.7,7187.4,659.24157771],[1528642800000,7228.4,7226.89629522,7248,7209.8,323.6828298],[1528639200000,7267.9,7228.4,7268,7227.7,233.19154743]]'

# jours
j_son = "https://api.bitfinex.com/v2/candles/trade:1D:tBTCUSD/hist"
#j_son = '[[1529020800000,6633.8,6498.9,6659,6450,10636.33964675],[1528934400000,6295,6633.7,6736.52103872,6269.5,33064.78236384],[1528848000000,6543.9,6295.1,6611.7,6107.87718467,45577.5818617],[1528761600000,6873.4,6543.9,6873.4,6436.1,32008.31280289],[1528675200000,6757.9,6873.3,6899,6629.7,22377.74129318],[1528588800000,7498.5,6758,7498.6,6618.9,57822.89152512],[1528502400000,7615.2,7498.5,7685,7450,7242.26022178],[1528416000000,7689,7615.1,7697,7543.6,12198.64324961],[1528329600000,7654,7688.9,7756.3,7624.7,11037.50621419],[1528243200000,7622.2,7654,7700,7491.7,18269.76321759],[1528156800000,7488.4,7621.9,7675,7372,16741.56378202],[1528070400000,7718.1,7488.3,7764,7451.1,18132.68188151],[1527984000000,7638,7718,7779,7600,13796.12597233],[1527897600000,7521.1,7638.1,7698.8,7441.5,17363.61246282],[1527811200000,7485.9,7521,7599.8,7329.18847938,19041.11552011],[1527724800000,7375.2,7485.8,7599.7,7338,19464.90994361],[1527638400000,7465.3,7375.12085307,7560,7270.5,22083.1286555],[1527552000000,7097.8,7465.2,7536,7040,27898.86827943],[1527465600000,7339.6,7097.9,7437.7,7062.3,26677.86919628],[1527379200000,7328.3,7339.7,7425.4,7211.1,16174.92718596],[1527292800000,7457,7327.7,7624.1,7281,13810.01732345],[1527206400000,7576.7,7456.7,7654.1,7318.2,25874.77784019],[1527120000000,7494.75035778,7576.7,7729.83193573,7260,38874.00093748],[1527033600000,7977.5,7494.8,8020,7402.7,41682.56642389],[1526947200000,8393.4,7977.85004461,8408.28483299,7943.3,20533.75166684],[1526860800000,8523.7,8399.6,8644,8309.1,17243.42785131],[1526774400000,8230.9,8523.7,8597.9,8171.5,15500.06161263],[1526688000000,8239,8231,8468,8140.2,14145.51584136],[1526601600000,8054.8,8238.9,8277.2,7925,23441.86359754],[1526515200000,8336,8054.3,8482.2,7982.5,25198.75333045],[1526428800000,8468.3,8336.1,8492.7,8100,32761.81738899],[1526342400000,8670.8,8467.5,8855.7,8415,26208.30282469],[1526256000000,8683.5,8670.8,8884.5,8271,37154.66777466],[1526169600000,8471.4,8683.6,8760,8318.3,22901.02790398],[1526083200000,8412.4,8470.8,8631.7,8204.40576219,36656.11285429],[1525996800000,9018,8412.4,9018.1,8333.8,54491.37206262],[1525910400000,9318.2,9018,9393.9,9003,23656.32064121],[1525824000000,9184.8,9318.2,9375.8,8980,22806.83809363],[1525737600000,9370,9184.7,9471,9045.3,25856.47976709],[1525651200000,9658.6,9370,9677.9,9182.7,25777.51751859],[1525564800000,9861.3,9658.7,9964,9454,26926.62708883],[1525478400000,9703,9861.2,9990,9685,29515.17033612],[1525392000000,9759,9703,9848,9542.5,24541.75830006],[1525305600000,9236.4,9759,9875,9161,36486.07108191],[1525219200000,9071.3,9236.4,9279.9,8968.3,20183.06924246],[1525132800000,9240.6,9068.2,9247.3,8817.97469512,25618.29910968],[1525046400000,9400,9240.6,9450,9100,23272.44121328],[1524960000000,9345.3,9400,9565.1,9180,27317.18897012],[1524873600000,8920.1,9345.7,9500,8750,45082.68295707],[1524787200000,9268.9,8920.1,9381.1,8888.6,30153.53624396],[1524700800000,8867.4,9269.9,9308,8652.2,43219.8251838],[1524614400000,9646.9,8869.2,9767.4,8765.1,74563.78705265],[1524528000000,8940.3,9646.8,9745,8929.9,60351.4363934],[1524441600000,8791.4,8940,9011,8769,23257.40469698],[1524355200000,8912.4,8791.4,9048.2,8751.08522139,31444.63142715],[1524268800000,8863.3,8912.5,9069,8616,39569.36259725],[1524182400000,8273.6,8865.4,8937.5,8219,50910.48764688],[1524096000000,8172.7,8273,8297.4,8032.2,29215.2810937],[1524009600000,7888.9,8171,8237.2,7870.5,29561.23299016],[1523923200000,8056.2,7888.9,8185,7823,28238.53189988],[1523836800000,8357.4,8056.2,8415.5,7900.3,37557.99053678],[1523750400000,8007.13719858,8357.5,8458.8,7997.2,31903.36342454],[1523664000000,7889.2,8005.90324308,8185,7820.5,26520.47168413],[1523577600000,7911.9,7886.9,8240,7739.1,59903.05842061],[1523491200000,6943.1,7912,8087,6753,94578.84574316],[1523404800000,6836.1,6943.1,7017.4,6794,29543.21336051],[1523318400000,6770.1,6837.1,6897.4,6650,26152.80687197],[1523232000000,7023.9,6770.1,7189,6611,75966.61404985],[1523145600000,6892.62150518,7023.9,7127,6883,29326.29649253],[1523059200000,6610.3,6892.6,7080,6599.9,40604.30992209],[1522972800000,6770.4,6610,6864,6500.2,42142.63100791],[1522886400000,6785.9,6769,6938,6564.9,45852.05082436],[1522800000000,7405.6,6786,7422,6670,53718.82875797],[1522713600000,7053.4,7405.6,7509.7,7019.9,49859.14696603],[1522627200000,6816.7,7053.3,7132,6769.4,45018.58755877],[1522540800000,6925.3,6816.6,7035.1,6425.1,54925.64706135],[1522454400000,6840.4,6925.4,7222,6780.06217933,68024.05162901],[1522368000000,7094,6840.4,7269,6533,108209.35704737],[1522281600000,7936.1,7094,7973,6883,77417.33236497],[1522195200000,7784.7,7936,8120.2,7702.1,35076.69583199],[1522108800000,8134,7784.6,8210,7716.6,50399.25537628],[1522022400000,8445.1,8131.12312438,8499.1,7835.9,56392.58119403],[1521936000000,8521.6,8445,8674.4,8364.8,30645.03282707],[1521849600000,8917.2,8522.6,9050.3,8460,44193.74054593],[1521763200000,8697.5,8914.4,8917.6,8271.1,44941.30622512],[1521676800000,8888.3,8699.3,9095.92211691,8450,54388.37095067],[1521590400000,8899.8,8888.2,9177.5,8752,42887.78508745],[1521504000000,8600.2,8899.7,9040,8305.1,54284.58176604],[1521417600000,8200.3,8600.2,8717,8085.7,73251.92027749],[1521331200000,7838.6,8200.3,8300,7240,88941.82113808],[1521244800000,8250,7845,8367,7728.1,48918.44713816],[1521158400000,8249.5,8250,8604.5,7902,56404.93713158],[1521072000000,8175.6,8250.1,8418,7665.1,82546.4115633],[1520985600000,9136,8176,9439.6,7916,78853.59717725],[1520899200000,9130.2,9135.2,9482.4,8822,61535.84281184],[1520812800000,9525.9,9130.2,9900,8770,67584.63439057],[1520726400000,8772.5,9527.7,9729,8428,70479.03366867],[1520640000000,9216.1,8769.9,9506.4,8670.9,52532.10288514],[1520553600000,9300,9216.2,9428,8342,98209.14736199],[1520467200000,9910.5,9300,10112,9025,67737.89183319],[1520380800000,10719,9910.6,10899,9400,75229.1298207],[1520294400000,11402,10720,11411,10567,44204.34909731],[1520208000000,11500,11402,11700,11356,27673.45862513],[1520121600000,11454,11500,11549,11050,28076.33766207],[1520035200000,11025,11454.95955159,11530,11025,30650.73751883],[1519948800000,10920,11024,11189,10762,28855.82862948],[1519862400000,10314,10908,11095,10210,33869.22445966],[1519776000000,10583,10315,11065,10261,43849.4721757],[1519689600000,10321,10582,10888,10125,39700.54163029],[1519603200000,9579,10320,10439,9359.9,45959.25163133],[1519516800000,9665.6,9583,9840,9280.4,30561.64547224],[1519430400000,10143,9666.3,10500,9350.3,55697.19406067],[1519344000000,9826.4,10144,10395,9583.1,59075.59463978],[1519257600000,10451,9826.5,10915,9740,71231.4916942],[1519171200000,11212,10450,11239,10200,76960.8730687],[1519084800000,11172,11211,11788,11100,60919.59904305],[1518998400000,10399,11172,11250,10308,50701.38956789],[1518912000000,11062,10400,11250,10122,69821.77417197],[1518825600000,10161,11062,11084,10049,52814.53068791],[1518739200000,9996,10162,10271,9670,43868.12020493]]'



# load the dataset
df = read_json(j_son)
df = df.iloc[::-1]
date = pd.to_datetime(df[0]*1000000)
close = df[4]

dataset = close.values
dataset = dataset.astype('float32')
dataset = np.reshape(dataset, (-1, 1))


datetime_set = date.values


#print(datetime_set)

print(dataset[-1])

scaler = MinMaxScaler(feature_range=(0, 1))
dataset = scaler.fit_transform(dataset)





#prepare the X and Y label
X,y = create_dataset(dataset)
#Take 80% of data as the training sample and 20% as testing sample
trainX, testX, trainY, testY = train_test_split(X, y, test_size=0.20, shuffle=False)
# reshape input to be [samples, time steps, features]
trainX = np.reshape(trainX, (trainX.shape[0], 1, trainX.shape[1]))
testX = np.reshape(testX, (testX.shape[0], 1, testX.shape[1]))




# create and fit the LSTM network
model = Sequential()
model.add(LSTM(4, input_shape=(1, 1)))
model.add(Dense(1))
model.compile(loss='logcosh', optimizer='adadelta')
model.fit(trainX, trainY, epochs=100, batch_size=2, verbose=2)
#save model for later use
model.save('./savedModel')
#load_model
model = load_model('./savedModel')
# make predictions
trainPredict = model.predict(trainX)
testPredict = model.predict(testX)
#futurePredict = model.predict(np.asarray([[testPredict[-1]]]))

#prevision par rapport à la derniere valeur reelle
futurePredict2 = model.predict(np.asarray([[dataset[-1]]]))

futurePredict3 = model.predict(np.asarray([futurePredict2]))
futurePredict4 = model.predict(np.asarray([futurePredict3]))
futurePredict5 = model.predict(np.asarray([futurePredict4]))
futurePredict6 = model.predict(np.asarray([futurePredict5]))
futurePredict7 = model.predict(np.asarray([futurePredict6]))



#futurePredict = scaler.inverse_transform(futurePredict)
futurePredict2 = scaler.inverse_transform(futurePredict2)
#futurePredict3 = scaler.inverse_transform(futurePredict3)
#futurePredict4 = scaler.inverse_transform(futurePredict4)
#futurePredict5 = scaler.inverse_transform(futurePredict5)
#futurePredict6 = scaler.inverse_transform(futurePredict6)
#futurePredict7 = scaler.inverse_transform(futurePredict7)


# invert predictions
trainPredict = scaler.inverse_transform(trainPredict)
trainY = scaler.inverse_transform(trainY)
testPredict = scaler.inverse_transform(testPredict)
testY = scaler.inverse_transform(testY)
print("Jer debut")
print(scaler.inverse_transform(testX[-1]))
print(scaler.inverse_transform(testX[-2]))
print(scaler.inverse_transform(testX[-3]))
print(scaler.inverse_transform(testX[-4]))
print(scaler.inverse_transform(testX[-5]))

for i in range(1,len(testPredict)):
    if testX[-i] < testX[-i-1]: res = "A"
    else: res = "B"
    if testPredict[-i] < testPredict[-i-1]: res2 = "A"
    else: res2 = "B"
    if res == res2:
        if res == "A": print(repr(datetime_set[-i-1]) + " en BAISSE (" + repr(i) + ") " + repr(scaler.inverse_transform(testX[-i])) + "  " + repr(testPredict[-i]) )
        else: print(repr(datetime_set[-i-1]) + " en HAUSSE (" + repr(i) + ") " + repr(scaler.inverse_transform(testX[-i])) + "  " + repr(testPredict[-i]) )
    else: print(" en décalage")



print("Jer fin")

print("Price for last 5 days: ")
print(testPredict[-5:])
#print("Bitcoin price for next hour: ", futurePredict)
print(" Bitcoin price for next hour: ", futurePredict2)

aujourdhui = scaler.inverse_transform([dataset[-1]])
demain = futurePredict2

print(aujourdhui)
print(demain)

gain = math.floor(aujourdhui - demain)
if gain > 0: sens = "Vente "
else: sens = "Achat "

print(sens, "avec un gain prevu de: ", math.fabs(gain), " euros ")



#print("                   and then: ", futurePredict3)
#print("                   and then: ", futurePredict4)
#print("                   and then: ", futurePredict5)
#print("                   and then: ", futurePredict6)
#print("                   and then: ", futurePredict7)
# calculate root mean squared error
trainScore = math.sqrt(mean_squared_error(trainY[:,0], trainPredict[:,0]))
print('Train Score: %.2f RMSE' % (trainScore))
testScore = math.sqrt(mean_squared_error(testY[:,0], testPredict[:,0]))
print('Test Score: %.2f RMSE' % (testScore))
# shift train predictions for plotting
trainPredictPlot = np.empty_like(dataset)
trainPredictPlot[:, :] = np.nan
trainPredictPlot[1:len(trainPredict)+1, :] = trainPredict
# shift test predictions for plotting
testPredictPlot = np.empty_like(dataset)
testPredictPlot[:, :] = np.nan
testPredictPlot[len(trainPredict):len(dataset)-1, :] = testPredict
# plot baseline and predictions
plt.plot(scaler.inverse_transform(dataset))
plt.plot(trainPredictPlot)
plt.plot(testPredictPlot)
#plt.show()
